---
- hosts: marathon-api-server
  gather_facts: no

  vars:
    app_name: platform/beacon
    marathon_wait_for_deployment: False

  pre_tasks:
  - name: Create storage
    tags:
      - alerts
    file:
      path: /mnt/data/{{ app_name }}/etc
      state: directory
      mode: 0755

  - name: Create beacon/
    tags:
      - alerts
    file: path=beacon state=directory mode=0755

  - name: Install config.json
    tags:
      - alerts
    template:
      src: beacon/config.json.j2
      dest: /mnt/data/{{ app_name }}/etc/config.json
      mode: 0440

  - name: Install {{ cluster_name }}.json
    tags:
      - alerts
    template:
      src: beacon/{{ cluster_name }}.json.j2
      dest: /mnt/data/{{ app_name }}/etc/{{ cluster_name }}.json
      mode: 0440

  - name: Create system-stats
    tags:
      - stats
    file:
      path: /mnt/data/system-stats/scripts
      state: directory
      mode: 0755

  - name: Copy system-stats scripts
    tags:
      - stats
    copy: src=beacon/system-stats dest=/mnt/data/ mode=0755

  - name: Remove reset docker containers stats from cron
    cron:
      name: "reset docker containers stats"
      state: absent

  roles:
  - role: topface.marathon_app
    marathon_url: http://{{ inventory_hostname }}:8080
    marathon_app:
      id: /{{ app_name }}
      container:
        type: DOCKER
        docker:
          image: jeko/graphite-beacon:develop
          network: BRIDGE
        volumes:
          - containerPath: /srv/alerting/etc
            hostPath: /mnt/data/{{ app_name }}/etc
            mode: RO
      env:
        FORCE_REDEPLOY: "{{ range(1, 1000) | random }}"
      instances: 1
      cpus: 0.1
      mem: 64

      # Only one instance should run at any point in time.
      upgradeStrategy:
        minimumHealthCapacity: 0
        maximumOverCapacity: 0
    tags:
      - alerts

- hosts: all
  gather_facts: no

  tasks:

  - name: Ensure netcat is installed.
    tags:
      - stats
    apt: name=netcat-openbsd state=installed

  - name: Send stats every minutes
    tags:
      - stats
    cron:
      name: "send system stats"
      minute: "*"
      job: "/mnt/data/system-stats/all.sh {{ groups['marathon-api-server'][0] }} 8125"

