---
- hosts: mesos-slaves
  gather_facts: no
  vars:
    app_name: platform/marathon-lb-internal
    app_port: 9092

  tasks:
    - name: Create templates storage
      file:
        path: "/usr/local/{{ cluster_name }}/{{ app_name }}/templates"
        state: directory
        mode: 0755

    - name: Copy templates
      template:
        src: marathon-lb-internal/{{ item }}
        dest: "/usr/local/{{ cluster_name }}/{{ app_name }}/templates/{{ item }}"
        mode: 0440
      with_items:
        - HAPROXY_HEAD
        - HAPROXY_HTTP_FRONTEND_HEAD
        - HAPROXY_HTTPS_FRONTEND_HEAD

    - name: Create certificates storage
      file:
        path: "/usr/local/{{ cluster_name }}/{{ app_name }}/ssl"
        state: directory
        mode: 0755

    - name: Copy certificates
      copy:
        src: "..{{ ssl_certs }}"
        dest: "/usr/local/{{ cluster_name }}/{{ app_name }}{{ ssl_certs }}"
        mode: 0644

- hosts: marathon-api-server
  gather_facts: no

  vars:
    app_name: platform/marathon-lb-internal
    app_port: 9092

  roles:
  - role: topface.marathon_app
    tags:
      - platform
      - haproxy
    marathon_url: http://{{ inventory_hostname }}:8080
    marathon_wait_for_deployment: False
    marathon_app:
      id: /{{ app_name }}
      cmd: >
        /marathon-lb/run sse
        --marathon "http://{{ groups['marathon-api-server'][0] }}:8080"
        --group internal
        --health-check
        --ssl-certs "{{ ssl_certs }}"
      container:
        type: DOCKER
        docker:
          image: mesosphere/marathon-lb:v1.5.0
          network: HOST
        volumes:
          - containerPath: /ssl
            hostPath: "/usr/local/{{ cluster_name }}/{{ app_name }}/ssl"
            mode: RO
          - containerPath: /marathon-lb/templates
            hostPath: "/usr/local/{{ cluster_name }}/{{ app_name }}/templates"
            mode: RO
      instances: 2
      cpus: 0.1
      mem: 128
      ports:
        - "{{ app_port }}"
      healthChecks:
        - protocol: HTTP
          path: "/_haproxy_health_check"
          port: "{{ app_port }}"
          gracePeriodSeconds: 15
          maxConsecutiveFailures: 3
          intervalSeconds: 5
          timeoutSeconds: 5
      constraints:
        - [ "hostname", "LIKE", "({{ groups['marathon-lb-internal'][0] }}|{{ groups['marathon-lb-internal'][1] }})" ]

      upgradeStrategy:
        minimumHealthCapacity: 0
        maximumOverCapacity: 0
